load("~/Dropbox/research/gene/MRtree/code/mrtree-old/data/data_example.rda")
sc_simulation_functions.R
sc_clustering_methods.R
plot_utils.R
mrtree_functions.R
evaluation_functions.R
data.R
print(as.lst(.GlobalEnv))
print(as.lIst(.GlobalEnv))
print(as.list(.GlobalEnv))
rm(list = ls())
print(as.list(.GlobalEnv))
usethis::use_vignette('MRtree-tutorial')
devtools::document()
devtools::load_all()
tree = tree1(plot=T)$phylo.tree
symsim.param.zeisel = list(gene_effects_sd=2, sigma=0.2, scale_s=0.4, alpha_mean=0.5, alpha_sd=0.025,
depth_mean=2e5,depth_sd=1.5e4, nPCR1=14, prop_hge=0.01, mean_hge=3)
ngenes = 500
ncells = 500
truek = 8; min_popsize = floor(ncells/truek)
i_minpop =  which(tree$tip.label=='Microglia')
seed = 0
simu.out = generateDataSymSim(ncells=ncells, ngenes=ngenes, tree=tree,
params=symsim.param.zeisel, plot.tsne=T,
i_minpop=i_minpop, min_popsize=min_popsize,
nevf = 50, n_de_evf =25, sigma=0.8, seed = seed)
simu.out = generateDataSymSim(ncells=ncells, ngenes=ngenes, tree=tree,
params=symsim.param.zeisel, plot.tsne=T,
i_minpop=i_minpop, min_popsize=min_popsize,
nevf = 50, n_de_evf =25, sigma=0.8, seed = seed)
simu.out$tsne_UMI_counts
data_example = simu.out; usethis::use_data(data_example)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::load_all()
sc_clustering.seurat()
sc_clustering.seurat
help(
The main function to perform MRtree analysis is ``mrtree()``, where the data input is one of the following:
* An n-by-m matrix of labels, where n is the number of cells, m is the number of clustering resolutions
* A dataframe, with the targeted column prefix/suffix specified in prefix /suffix
* Seurat object with multiresolution clustering results
* SingleCellExperiment (SC3) object with multiresolution clustering results
``sc_clustering_methods.R`` file provide a few clustering warppers including:
* ``sc_clustering.seurat``, graph clustering provided by [Seurat](https://satijalab.org/seurat/) package (@RN226)
* ``sc_clustering.sc3``, Consensus clustering provided by [SC3](https://github.com/hemberg-lab/SC3) package (@RN33)
* ``sc_clustering.simlr``, SIMLAR clustering provided by [SIMLR](https://github.com/BatzoglouLabSU/SIMLR) package  (@RN258)
* ``sc_clustering.soup``, Semi-soft clustering provided in [SOUP](https://github.com/lingxuez/SOUPR) package (@RN195)
* ``sc_clustering.tsne_kmeans``, TSNE + Kmeans clustering
* ``sc_clustering.umap_kmeans``, UMAP + Kmeans clustering
### MRtree with Seurat clustering
As first step, multi-resolution flat clustering is conducted using Seurat with a range of resolution parameters. The results can be visualized using a cluster tree, where each layer represent one clustering, the tree nodes represent clusters, and edge exists between clusters in adjacent layers if two clusters share data points.
```{r, fig.width=7, fig.height=4}
set.seed(1)
counts = dat$counts
metadata = dat$metadata
rownames(metadata) = dat$metadata$cellid
ref.labels = dat$metadata$type
resolutions = seq(0.1, 2, 0.1)^2
# clustering using Suerat
seurat.out = sc_clustering.seurat(counts=counts, resolutions=resolutions, metadata=metadata, npcs=10,
min.cells=0, min.features=0, scale.factor=10000, return.seurat.object=T,
vars.to.regress=NULL, find.variable.features=F, verbose=F)
# initial cluster tree from Seurat flat clustering
plot_clustree(labelmat=seurat.out$seurat.clusters, prefix ='RNA_snn_res.',
ref.labels = ref.labels, plot.ref = F)
```
Then we apply MRtree to ubtain the hierarchical cluster tree, visualized using a dendrogram, with a pie chart on each tree node detailing the cluster composition given the known true labels.
```{r, warning=F, message=F, fig.width=7, fig.height=4}
out = mrtree(seurat.out$obj)
plot_tree_with_piechart(labelmat=out$labelmat.mrtree, ref.labels=ref.labels, draw.pie.chart=TRUE,
pie.size.offset=1, show.ref.labels = T, tip.label.dist = 10, bottom.margin=30 )
```
We evaluate te per-resolution clustering performance with a novel index adapted from Adjusted Rand Index to accrount for te bias for resolution.
```{r, fig.width=5, fig.height=3}
amri.flat = sapply(1:ncol(out$labelmat.flat), function(i) AMRI(out$labelmat.flat[,i], ref.labels)$amri)
amri.recon = sapply(1:ncol(out$labelmat.mrtree), function(i) AMRI(out$labelmat.mrtree[,i], ref.labels)$amri)
df = rbind(data.frame(k=out$num.clust.flat, amri=amri.flat, method='Seurat flat'),
data.frame(k=apply(out$labelmat.mrtree, 2, FUN=function(x) length(unique(x))), amri=amri.recon, method='MRtree'))
ggplot2::ggplot(data=df, aes(x=k, y=amri, color=method)) + geom_line() + theme_bw()
```
We calcuate the similarity between the initial flat clustering and MRtree clusters across scales. Lower similarity indicates the selected clustering algorithm is not able to generate stabel clusters at the specific resolution. In this case stability drops steeply when $k>8$.
```{r, fig.width=5, fig.height=3}
diff = get_index_per_layer(labelmat1=out$labelmat.flat, labelmat2=out$labelmat.recon, index.name='ari')
df = aggregate(diff, by=list(k=out$num.clust.recon), FUN=mean)
ggplot2::ggplot(data=df, aes(x=k, y=x)) + geom_line() + theme_bw() + labs(title='differece between initial clusters and MRtree')
```
# Reference
)
help(sc_clustering.seurat)
sc_clustering.seurat
??sc_clustering.seurat
devtools::document()
??sc_clustering.seurat
help(mrtree)
help(sc_clustering.seurat)
devtools::build_vignettes()
devtools::document()
devtools::build_vignettes()
